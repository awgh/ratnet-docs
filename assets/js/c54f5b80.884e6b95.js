"use strict";(self.webpackChunkratnet=self.webpackChunkratnet||[]).push([[338],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(n),y=o,d=f["".concat(l,".").concat(y)]||f[y]||u[y]||i;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7453:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:2},l="Connection Policy Interface",p={unversionedId:"api/policies/api",id:"api/policies/api",title:"Connection Policy Interface",description:"To create a new Connection Policy, the Policy interface must be implemented.  This is the only interface required for a new Connection Policy.",source:"@site/docs/api/policies/api.md",sourceDirName:"api/policies",slug:"/api/policies/api",permalink:"/ratnet-docs/docs/api/policies/api",draft:!1,editUrl:"https://github.com/awgh/ratnet-docs/tree/gh-pages/docs/api/policies/api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Connection Policies",permalink:"/ratnet-docs/docs/api/policies/intro"},next:{title:"Transports",permalink:"/ratnet-docs/docs/api/transports/intro"}},s={},u=[{value:"RunPolicy",id:"runpolicy",level:2},{value:"Stop",id:"stop",level:2},{value:"GetTransport",id:"gettransport",level:2},{value:"MarshallJSON",id:"marshalljson",level:2}],f={toc:u};function y(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connection-policy-interface"},"Connection Policy Interface"),(0,i.kt)("p",null,"To create a new Connection Policy, the Policy interface must be implemented.  This is the only interface required for a new Connection Policy."),(0,i.kt)("p",null,"In this section, we'll go through each of the functions in the Policy interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'"','"':!0},"type Policy interface {\n    RunPolicy() error\n    Stop()\n    GetTransport() Transport\n\n    JSON\n}\n\ntype JSON interface {\n    MarshalJSON() (b []byte, e error)\n}\n")),(0,i.kt)("h2",{id:"runpolicy"},"RunPolicy"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'"','"':!0},"    RunPolicy() error\n")),(0,i.kt)("p",null,"Start running this policy."),(0,i.kt)("h2",{id:"stop"},"Stop"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'"','"':!0},"    Stop()\n")),(0,i.kt)("p",null,"Stop running this policy."),(0,i.kt)("h2",{id:"gettransport"},"GetTransport"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'"','"':!0},"    GetTransport() Transport\n")),(0,i.kt)("p",null,"Returns the Transport associated with this policy."),(0,i.kt)("h2",{id:"marshalljson"},"MarshallJSON"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"MarshalJSON() (b []byte, e error)\n")),(0,i.kt)("p",null,"Serialize this type to JSON."))}y.isMDXComponent=!0}}]);